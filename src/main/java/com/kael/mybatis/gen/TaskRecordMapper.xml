<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kael.mybatis.gen.TaskRecordMapper" >
  <resultMap id="BaseResultMap" type="com.kael.mybatis.gen.TaskRecord" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="subtype" property="subtype" jdbcType="VARCHAR" />
    <result column="timeoutmillis" property="timeoutmillis" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="starttime" property="starttime" jdbcType="TIMESTAMP" />
    <result column="finishtime" property="finishtime" jdbcType="TIMESTAMP" />
    <result column="progress" property="progress" jdbcType="INTEGER" />
    <result column="msg" property="msg" jdbcType="VARCHAR" />
    <result column="flag" property="flag" jdbcType="VARCHAR" />
    <result column="inputdata" property="inputdata" jdbcType="VARCHAR" />
    <result column="outputdata" property="outputdata" jdbcType="VARCHAR" />
    <result column="props" property="props" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, type, subtype, timeoutmillis, state, starttime, finishtime, progress, msg, flag, 
    inputdata, outputdata, props
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.kael.mybatis.gen.TaskRecordCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tasks
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tasks
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tasks
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.kael.mybatis.gen.TaskRecordCriteria" >
    delete from tasks
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kael.mybatis.gen.TaskRecord" >
    insert into tasks (id, type, subtype, 
      timeoutmillis, state, starttime, 
      finishtime, progress, msg, 
      flag, inputdata, outputdata, 
      props)
    values (#{id,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{subtype,jdbcType=VARCHAR}, 
      #{timeoutmillis,jdbcType=INTEGER}, #{state,jdbcType=VARCHAR}, #{starttime,jdbcType=TIMESTAMP}, 
      #{finishtime,jdbcType=TIMESTAMP}, #{progress,jdbcType=INTEGER}, #{msg,jdbcType=VARCHAR}, 
      #{flag,jdbcType=VARCHAR}, #{inputdata,jdbcType=VARCHAR}, #{outputdata,jdbcType=VARCHAR}, 
      #{props,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.kael.mybatis.gen.TaskRecord" >
    insert into tasks
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="subtype != null" >
        subtype,
      </if>
      <if test="timeoutmillis != null" >
        timeoutmillis,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="starttime != null" >
        starttime,
      </if>
      <if test="finishtime != null" >
        finishtime,
      </if>
      <if test="progress != null" >
        progress,
      </if>
      <if test="msg != null" >
        msg,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="inputdata != null" >
        inputdata,
      </if>
      <if test="outputdata != null" >
        outputdata,
      </if>
      <if test="props != null" >
        props,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="subtype != null" >
        #{subtype,jdbcType=VARCHAR},
      </if>
      <if test="timeoutmillis != null" >
        #{timeoutmillis,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null" >
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishtime != null" >
        #{finishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="progress != null" >
        #{progress,jdbcType=INTEGER},
      </if>
      <if test="msg != null" >
        #{msg,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=VARCHAR},
      </if>
      <if test="inputdata != null" >
        #{inputdata,jdbcType=VARCHAR},
      </if>
      <if test="outputdata != null" >
        #{outputdata,jdbcType=VARCHAR},
      </if>
      <if test="props != null" >
        #{props,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kael.mybatis.gen.TaskRecordCriteria" resultType="java.lang.Integer" >
    select count(*) from tasks
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tasks
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.subtype != null" >
        subtype = #{record.subtype,jdbcType=VARCHAR},
      </if>
      <if test="record.timeoutmillis != null" >
        timeoutmillis = #{record.timeoutmillis,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.starttime != null" >
        starttime = #{record.starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finishtime != null" >
        finishtime = #{record.finishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.progress != null" >
        progress = #{record.progress,jdbcType=INTEGER},
      </if>
      <if test="record.msg != null" >
        msg = #{record.msg,jdbcType=VARCHAR},
      </if>
      <if test="record.flag != null" >
        flag = #{record.flag,jdbcType=VARCHAR},
      </if>
      <if test="record.inputdata != null" >
        inputdata = #{record.inputdata,jdbcType=VARCHAR},
      </if>
      <if test="record.outputdata != null" >
        outputdata = #{record.outputdata,jdbcType=VARCHAR},
      </if>
      <if test="record.props != null" >
        props = #{record.props,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tasks
    set id = #{record.id,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      subtype = #{record.subtype,jdbcType=VARCHAR},
      timeoutmillis = #{record.timeoutmillis,jdbcType=INTEGER},
      state = #{record.state,jdbcType=VARCHAR},
      starttime = #{record.starttime,jdbcType=TIMESTAMP},
      finishtime = #{record.finishtime,jdbcType=TIMESTAMP},
      progress = #{record.progress,jdbcType=INTEGER},
      msg = #{record.msg,jdbcType=VARCHAR},
      flag = #{record.flag,jdbcType=VARCHAR},
      inputdata = #{record.inputdata,jdbcType=VARCHAR},
      outputdata = #{record.outputdata,jdbcType=VARCHAR},
      props = #{record.props,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kael.mybatis.gen.TaskRecord" >
    update tasks
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="subtype != null" >
        subtype = #{subtype,jdbcType=VARCHAR},
      </if>
      <if test="timeoutmillis != null" >
        timeoutmillis = #{timeoutmillis,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null" >
        starttime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishtime != null" >
        finishtime = #{finishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="progress != null" >
        progress = #{progress,jdbcType=INTEGER},
      </if>
      <if test="msg != null" >
        msg = #{msg,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=VARCHAR},
      </if>
      <if test="inputdata != null" >
        inputdata = #{inputdata,jdbcType=VARCHAR},
      </if>
      <if test="outputdata != null" >
        outputdata = #{outputdata,jdbcType=VARCHAR},
      </if>
      <if test="props != null" >
        props = #{props,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kael.mybatis.gen.TaskRecord" >
    update tasks
    set type = #{type,jdbcType=VARCHAR},
      subtype = #{subtype,jdbcType=VARCHAR},
      timeoutmillis = #{timeoutmillis,jdbcType=INTEGER},
      state = #{state,jdbcType=VARCHAR},
      starttime = #{starttime,jdbcType=TIMESTAMP},
      finishtime = #{finishtime,jdbcType=TIMESTAMP},
      progress = #{progress,jdbcType=INTEGER},
      msg = #{msg,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=VARCHAR},
      inputdata = #{inputdata,jdbcType=VARCHAR},
      outputdata = #{outputdata,jdbcType=VARCHAR},
      props = #{props,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>